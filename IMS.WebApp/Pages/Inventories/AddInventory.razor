@page "/addinventory"
@inject IAddInventoryUseCase AddInventoryUseCase
@inject NavigationManager NavigationManager

@*@attribute [Authorize(Policy = "Inventory")]*@

<h3>新增物料</h3>
<br />
<EditForm Model="inventory" OnValidSubmit="SaveInventory">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="name">物料名称</label>
        <InputText id="name" @bind-Value="inventory.InventoryName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="quantity">数量</label>
        <InputNumber id="quantity" @bind-Value="inventory.Quantity" class="form-control"></InputNumber>
    </div>
    <div class="form-group">
        <label for="price">价格</label>
        <InputNumber id="price" @bind-Value="inventory.Price" class="form-control"></InputNumber>
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">保存</button>
    <button type="button" class="btn btn-primary" @onclick="Cancel">取消</button>
</EditForm>

@code {
    private Inventory inventory { get; set; } = new Inventory();

    private async Task SaveInventory()
    {
        
        await AddInventoryUseCase.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventories");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/inventories");
    }
}
